{
  "swagger" : "2.0",
  "info" : {
    "description" : "Swagger API documentation for TODO Application",
    "version" : "0.0.1-SNAPSHOT",
    "title" : "Swagger API documentation for TODO Application",
    "contact" : {
      "name" : "Lucas Rajaoarison",
      "email" : "rajaoarisoner@gmail.com"
    }
  },
  "basePath" : "http://localhost:8080",
  "tags" : [ {
    "name" : "articles"
  }, {
    "name" : "categories"
  }, {
    "name" : "clients"
  }, {
    "name" : "commandeClients"
  }, {
    "name" : "commandeFournisseurs"
  }, {
    "name" : "entreprises"
  }, {
    "name" : "fournisseurs"
  }, {
    "name" : "mouvementStocks"
  }, {
    "name" : "photos"
  }, {
    "name" : "utilisateurs"
  }, {
    "name" : "ventes"
  } ],
  "paths" : {
    "/api/article/code/{code}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Rechercher un article par code",
        "description" : "Cette methode permet de chercher un article par son code",
        "operationId" : "findByCodeArticle",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          }
        }
      }
    },
    "/api/article/create" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Enregistrer un article (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier un article",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ArticleDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet article creer/modifier",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          }
        }
      }
    },
    "/api/article/{articleId}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Rechercher un article par ID",
        "description" : "Cette methode permet de chercher un article par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          }
        }
      }
    },
    "/api/article/{id}" : {
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Supprimer un article par son ID",
        "description" : "Cette methode permet de supprimer un article par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/articles" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Lister les articles",
        "description" : "Cette methode permet de lister les articles",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ArticleDto"
              }
            }
          }
        }
      }
    },
    "/api/articles/filter/category/{idCategory}" : {
      "get" : {
        "tags" : [ "articles" ],
        "operationId" : "findAllArticleByCategoryId",
        "parameters" : [ {
          "name" : "idCategory",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ArticleDto"
              }
            }
          }
        }
      }
    },
    "/api/articles/historique/commandeclient/{idArticle}" : {
      "get" : {
        "tags" : [ "articles" ],
        "operationId" : "findHistoriqueCommandeClient",
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/api/articles/historique/commandefournisseur/{idArticle}" : {
      "get" : {
        "tags" : [ "articles" ],
        "operationId" : "findHistoriqueCommandeFournisseur",
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/api/articles/historique/vente/{idArticle}" : {
      "get" : {
        "tags" : [ "articles" ],
        "operationId" : "findHistoriqueVente",
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneVenteDto"
              }
            }
          }
        }
      }
    },
    "/api/categorie/code/{code}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Rechercher une categorie par Code",
        "description" : "Cette methode permet de chercher une categorie par son code",
        "operationId" : "findByCodeCategorie",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CategorieDto"
            }
          }
        }
      }
    },
    "/api/categorie/create" : {
      "post" : {
        "tags" : [ "categories" ],
        "summary" : "Enregistrer une categorie (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier une categorie",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CategorieDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet categorie creer/modifier",
            "schema" : {
              "$ref" : "#/definitions/CategorieDto"
            }
          }
        }
      }
    },
    "/api/categorie/{id}" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Rechercher une categorie par ID",
        "description" : "Cette methode permet de chercher une categorie par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CategorieDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "categories" ],
        "summary" : "Supprimer une categorie par son ID",
        "description" : "Cette methode permet de supprimer une categorie par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/categories" : {
      "get" : {
        "tags" : [ "categories" ],
        "summary" : "Lister les categories",
        "description" : "Cette methode permet de lister les categories",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategorieDto"
              }
            }
          }
        }
      }
    },
    "/api/client/create" : {
      "post" : {
        "tags" : [ "clients" ],
        "summary" : "Enregistrer un client (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier un client",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClientDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client creer/modifier"
          }
        }
      }
    },
    "/api/client/{id}" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Rechercher une client par ID",
        "description" : "Cette methode permet de chercher une client par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClientDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "clients" ],
        "summary" : "Supprimer un client par son ID",
        "description" : "Cette methode permet de supprimer un client par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/clients" : {
      "get" : {
        "tags" : [ "clients" ],
        "summary" : "Lister les clients",
        "description" : "Cette methode permet de lister les clients",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientDto"
              }
            }
          }
        }
      }
    },
    "/api/commandeClient/create" : {
      "post" : {
        "tags" : [ "commandeClients" ],
        "summary" : "Enregistrer une commande client (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier une commande client",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CommandeClientDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande client creer/modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/delete/client/{idCommande}/{idLigneCommande}" : {
      "delete" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "deleteArticle",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/ligneCommande/{idCommande}" : {
      "get" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "findAllLigneCommandeClientByCommandeClientId",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/api/commandeClient/update/article/{idCommande}/{idLigneCommande}/{idArticle}" : {
      "patch" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "updateArticle",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/update/client/{idCommande}/{idClient}" : {
      "patch" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "updateClient",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/update/etat/{idCommande}/{etatCommande}" : {
      "patch" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "updateEtatCommade",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "etatCommande",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "enum" : [ "EN_PREPARATION", "VALIDEE", "LIVREE" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/update/quantite/{idCommande}/{idLigneCommande}/{etatCommande}" : {
      "patch" : {
        "tags" : [ "commandeClients" ],
        "operationId" : "updateQuantiteCommande",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "quantite",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      }
    },
    "/api/commandeClient/{id}" : {
      "get" : {
        "tags" : [ "commandeClients" ],
        "summary" : "Rechercher une commande client par ID",
        "description" : "Cette methode permet de chercher une commande client par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "commandeClients" ],
        "summary" : "Supprimer une commande client par son ID",
        "description" : "Cette methode permet de supprimer une commande client par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/commandeClients" : {
      "get" : {
        "tags" : [ "commandeClients" ],
        "summary" : "Lister les commande clients",
        "description" : "Cette methode permet de lister les commande clients",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/create" : {
      "post" : {
        "tags" : [ "commandeFournisseurs" ],
        "summary" : "Enregistrer une commande fournisseur (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier une commande fournisseur",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CommandeFournisseurDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande fournisseur creer/modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/delete/fournisseur/{idCommande}/{idLigneCommande}" : {
      "delete" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "deleteArticle",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/ligneCommande/{idCommande}" : {
      "get" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "findAllLigneCommandeClientByCommandeClientId",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/update/article/{idCommande}/{idLigneCommande}/{idArticle}" : {
      "patch" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "updateArticle",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/update/etat/{idCommande}/{etatCommande}" : {
      "patch" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "updateEtatCommade",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "etatCommande",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "enum" : [ "EN_PREPARATION", "VALIDEE", "LIVREE" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/update/fournisseur/{idCommande}/{idFournisseur}" : {
      "patch" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "updateClient",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/update/quantite/{idCommande}/{idLigneCommande}/{etatCommande}" : {
      "patch" : {
        "tags" : [ "commandeFournisseurs" ],
        "operationId" : "updateQuantiteCommande",
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "quantite",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      }
    },
    "/api/commandeFournisseur/{id}" : {
      "get" : {
        "tags" : [ "commandeFournisseurs" ],
        "summary" : "Rechercher une commande fournisseur par ID",
        "description" : "Cette methode permet de chercher une commande fournisseur par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "commandeFournisseurs" ],
        "summary" : "Supprimer une commande fournisseur par son ID",
        "description" : "Cette methode permet de supprimer une commande fournisseur par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/commandeFournisseurs" : {
      "get" : {
        "tags" : [ "commandeFournisseurs" ],
        "summary" : "Lister les commande fournisseurs",
        "description" : "Cette methode permet de lister les commande fournisseurs",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/api/entreprise/create" : {
      "post" : {
        "tags" : [ "entreprises" ],
        "summary" : "Enregistrer un entreprise (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier un entreprise",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EntrepriseDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet entreprise creer/modifier"
          }
        }
      }
    },
    "/api/entreprise/{id}" : {
      "get" : {
        "tags" : [ "entreprises" ],
        "summary" : "Rechercher une entreprise par ID",
        "description" : "Cette methode permet de chercher une entreprise par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EntrepriseDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "entreprises" ],
        "summary" : "Supprimer un entreprise par son ID",
        "description" : "Cette methode permet de supprimer un entreprise par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/entreprises" : {
      "get" : {
        "tags" : [ "entreprises" ],
        "summary" : "Lister les entreprises",
        "description" : "Cette methode permet de lister les entreprises",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EntrepriseDto"
              }
            }
          }
        }
      }
    },
    "/api/fournisseur/create" : {
      "post" : {
        "tags" : [ "fournisseurs" ],
        "summary" : "Enregistrer un fournisseur (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier un fournisseur",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FournisseurDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet fournisseur creer/modifier"
          }
        }
      }
    },
    "/api/fournisseur/{id}" : {
      "get" : {
        "tags" : [ "fournisseurs" ],
        "summary" : "Rechercher un fournisseur par ID",
        "description" : "Cette methode permet de chercher une fournisseur par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FournisseurDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "fournisseurs" ],
        "summary" : "Supprimer un fournisseur par son ID",
        "description" : "Cette methode permet de supprimer un fournisseur par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/fournisseurs" : {
      "get" : {
        "tags" : [ "fournisseurs" ],
        "summary" : "Lister les fournisseurs",
        "description" : "Cette methode permet de lister les fournisseurs",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FournisseurDto"
              }
            }
          }
        }
      }
    },
    "/api/mouvement/correctionNeg" : {
      "post" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "correctionStockNegatif",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MouvementStckDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MouvementStckDto"
            }
          }
        }
      }
    },
    "/api/mouvement/correctionPos" : {
      "post" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "correctionStockPositif",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MouvementStckDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MouvementStckDto"
            }
          }
        }
      }
    },
    "/api/mouvement/entree" : {
      "post" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "entreStock",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MouvementStckDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MouvementStckDto"
            }
          }
        }
      }
    },
    "/api/mouvement/filtre/article/{idArticle}" : {
      "get" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "mouvementStockArticle",
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MouvementStckDto"
              }
            }
          }
        }
      }
    },
    "/api/mouvement/sortie" : {
      "post" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "sortieStock",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MouvementStckDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MouvementStckDto"
            }
          }
        }
      }
    },
    "/api/mouvement/stockReel/{idArticle}" : {
      "get" : {
        "tags" : [ "mouvementStocks" ],
        "operationId" : "stockReelArticle",
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "number"
            }
          }
        }
      }
    },
    "/api/photos/{id}/{titre}/{context}" : {
      "post" : {
        "tags" : [ "photos" ],
        "operationId" : "savePhoto",
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/utilisateur/create" : {
      "post" : {
        "tags" : [ "utilisateurs" ],
        "summary" : "Enregistrer un utilisateur (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier un utilisateur",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UtilisateurDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur creer/modifier",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          }
        }
      }
    },
    "/api/utilisateur/{id}" : {
      "get" : {
        "tags" : [ "utilisateurs" ],
        "summary" : "Rechercher une utilisateur par ID",
        "description" : "Cette methode permet de chercher un utilisateur par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "utilisateurs" ],
        "summary" : "Supprimer un utilisateur par son ID",
        "description" : "Cette methode permet de supprimer un utilisateur par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/utilisateurs" : {
      "get" : {
        "tags" : [ "utilisateurs" ],
        "summary" : "Lister les utilisateurs",
        "description" : "Cette methode permet de lister les utilisateurs",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UtilisateurDto"
              }
            }
          }
        }
      }
    },
    "/api/vente/create" : {
      "post" : {
        "tags" : [ "ventes" ],
        "summary" : "Enregistrer une vente (Ajouter/Modifier)",
        "description" : "Cette methode permet d'enregister ou de modifier une vente",
        "operationId" : "save",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VenteDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet vente creer/modifier"
          }
        }
      }
    },
    "/api/vente/{id}" : {
      "get" : {
        "tags" : [ "ventes" ],
        "summary" : "Rechercher une vente par ID",
        "description" : "Cette methode permet de chercher une vente par son ID",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VenteDto"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ventes" ],
        "summary" : "Supprimer une vente par son ID",
        "description" : "Cette methode permet de supprimer une vente par son ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/ventes" : {
      "get" : {
        "tags" : [ "ventes" ],
        "summary" : "Lister les ventes",
        "description" : "Cette methode permet de lister les ventes",
        "operationId" : "findAll",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VenteDto"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "AdresseDto" : {
      "type" : "object",
      "required" : [ "adresse1", "codePostal", "pays", "ville" ],
      "properties" : {
        "adresse1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "adresse2" : {
          "type" : "string"
        },
        "ville" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "codePostal" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "pays" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "ArticleDto" : {
      "type" : "object",
      "required" : [ "categorie", "codeArticle", "designation", "entreprise", "prixUnitaireHT", "prixUnitaireTTC", "tauxTva" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "codeArticle" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "designation" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "prixUnitaireHT" : {
          "type" : "number",
          "minimum" : 0
        },
        "tauxTva" : {
          "type" : "number",
          "minimum" : 0
        },
        "prixUnitaireTTC" : {
          "type" : "number",
          "minimum" : 0
        },
        "photo" : {
          "type" : "string"
        },
        "categorie" : {
          "$ref" : "#/definitions/CategorieDto"
        },
        "entreprise" : {
          "$ref" : "#/definitions/EntrepriseDto"
        }
      }
    },
    "CategorieDto" : {
      "type" : "object",
      "required" : [ "code", "designation" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "designation" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "ClientDto" : {
      "type" : "object",
      "required" : [ "adresse", "mail", "nom", "numTel", "prenom" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "prenom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647,
          "pattern" : "\\A(?!\\s*\\Z).+"
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "mail" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "numTel" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "CommandeClientDto" : {
      "type" : "object",
      "required" : [ "client", "code", "dateCommande", "etatCommande", "ligneCdeClients" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "dateCommande" : {
          "type" : "integer",
          "format" : "int64"
        },
        "etatCommande" : {
          "type" : "string",
          "enum" : [ "EN_PREPARATION", "VALIDEE", "LIVREE" ]
        },
        "client" : {
          "$ref" : "#/definitions/ClientDto"
        },
        "ligneCdeClients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneCommandeClientDto"
          }
        },
        "commandeLivree" : {
          "type" : "boolean"
        }
      }
    },
    "CommandeFournisseurDto" : {
      "type" : "object",
      "required" : [ "code", "dateCommande", "etatCommande", "fournisseur", "ligneCommandeFournisseur" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "dateCommande" : {
          "type" : "integer",
          "format" : "int64"
        },
        "etatCommande" : {
          "type" : "string",
          "enum" : [ "EN_PREPARATION", "VALIDEE", "LIVREE" ]
        },
        "fournisseur" : {
          "$ref" : "#/definitions/FournisseurDto"
        },
        "ligneCommandeFournisseur" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneCommandeFournisseurDto"
          }
        },
        "commandeLivree" : {
          "type" : "boolean"
        }
      }
    },
    "EntrepriseDto" : {
      "type" : "object",
      "required" : [ "adresse", "codeFiscal", "description", "mail", "nom", "numTel" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "description" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "codeFiscal" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "mail" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "photo" : {
          "type" : "string"
        },
        "numTel" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "FournisseurDto" : {
      "type" : "object",
      "required" : [ "mail", "nom", "numTel", "prenom" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "prenom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "mail" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "numTel" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "LigneCommandeClientDto" : {
      "type" : "object",
      "required" : [ "prixUnitaire", "quantite" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        }
      }
    },
    "LigneCommandeFournisseurDto" : {
      "type" : "object",
      "required" : [ "prixUnitaire", "quantite" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        }
      }
    },
    "LigneVenteDto" : {
      "type" : "object",
      "required" : [ "article", "prixUnitaire", "quantite" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        }
      }
    },
    "MouvementStckDto" : {
      "type" : "object",
      "required" : [ "article", "dateMouvement", "quantite", "typeMvtStck" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dateMouvement" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantite" : {
          "type" : "number"
        },
        "typeMvtStck" : {
          "type" : "string",
          "enum" : [ "ENTREE", "SORTIE", "CORRECTION_POSITIF", "CORRECTION_NEGATIF" ]
        },
        "sourceMvtStock" : {
          "type" : "string",
          "enum" : [ "COMMANDE_CLIENT", "COMMANDE_FOURNISSEUR", "VENTE" ]
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        }
      }
    },
    "RoleDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "roleName" : {
          "type" : "string"
        }
      }
    },
    "UtilisateurDto" : {
      "type" : "object",
      "required" : [ "adresse", "dateDeNaissance", "entreprise", "mail", "nom", "password", "prenom", "roles" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "prenom" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "mail" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "dateDeNaissance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "password" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "entreprise" : {
          "$ref" : "#/definitions/EntrepriseDto"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleDto"
          }
        }
      }
    },
    "VenteDto" : {
      "type" : "object",
      "required" : [ "code", "dateVente", "ligneVentes" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "dateVente" : {
          "type" : "integer",
          "format" : "int64"
        },
        "commentaire" : {
          "type" : "string"
        },
        "ligneVentes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneVenteDto"
          }
        }
      }
    }
  }
}